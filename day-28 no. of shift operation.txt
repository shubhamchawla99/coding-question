day-28 no. of shift operation

QL-https://www.codingninjas.com/studio/problems/number-of-operations-to-make-graph-connected._1385179?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf


#include <bits/stdc++.h>
using namespace std;
class DisjointSet {
	// vector<int> rank, parent, size;
public:
	vector<int> rank, parent, size;
    DisjointSet(int n) {
        rank.resize(n + 1, 0);
        parent.resize(n + 1);
        size.resize(n + 1);
        for (int i = 0; i <= n; i++) {
            parent[i] = i;
            size[i] = 1;
        }
    }

    int findUPar(int node) {
        if (node == parent[node])
            return node;
        return parent[node] = findUPar(parent[node]);
    }

    // void unionByRank(int u, int v) {
    //     int ulp_u = findUPar(u);
    //     int ulp_v = findUPar(v);
    //     if (ulp_u == ulp_v) return;
    //     if (rank[ulp_u] < rank[ulp_v]) {
    //         parent[ulp_u] = ulp_v;
    //     }
    //     else if (rank[ulp_v] < rank[ulp_u]) {
    //         parent[ulp_v] = ulp_u;
    //     }
    //     else {
    //         parent[ulp_v] = ulp_u;
    //         rank[ulp_u]++;
    //     }
    // }

    void unionBySize(int u, int v) {
        int ulp_u = findUPar(u);
        int ulp_v = findUPar(v);
        if (ulp_u == ulp_v) return;
        if (size[ulp_u] < size[ulp_v]) {
            parent[ulp_u] = ulp_v;
            size[ulp_v] += size[ulp_u];
        }
        else {
            parent[ulp_v] = ulp_u;
            size[ulp_u] += size[ulp_v];
        }
    }
};

int makeGraphConnected(int n, vector < pair < int,int > > edges, int m) 
{
	// Write Your Code here 
	DisjointSet ds(n+1);
	int cntExtras = 0;
	for(auto it : edges){
		int u = it.first ;
		int v = it.second ;
		if(ds.findUPar(u) == ds.findUPar(v)){
			cntExtras++ ;
		}
		else{
			ds.unionBySize(u,v);
		}
	}
	int cntc = 0 ;
	for(int i = 0 ; i< n+1 ; i++){
		if (ds.parent[i] == i) cntc++;
	}
	int ans = cntc - 1;
        if (cntExtras >= ans) return ans;
        return -1;
}










