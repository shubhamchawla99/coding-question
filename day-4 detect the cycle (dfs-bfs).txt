DAY-4 detect the cycle (dfs-bfs)

QL- https://www.codingninjas.com/studio/problems/detect-cycle-in-an-undirected-graph-_758967?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf

code bfs---------------------------------------------------------------------
class Graph {

    bool detect(int src, vector<int> adj[], int vis[]) {
        vis[src]=1 ;
        queue<pair<int,int>> q ;
        q.push({src,-1});
        while(!q.empty()){
            int node = q.front().first;
            int parent = q.front().second;
            q.pop();
            for(auto it : adj[node]){
                if(!vis[it]){
                    vis[it]=1;
                    q.push({it,node});
                }
                else if(parent != it) {
                  return true; 
                }
            }
        }
    }   
public:
    bool detectCycle(int V, vector<int> adj[]) {
        // Write your code here.
        int vis[V+1];
        memset(vis,0,sizeof(vis));
        for(int i = 0;i<V;i++) {
            if(!vis[i]) {
                if(detect(i, adj, vis)) return true; 
            }
        }
        return false;
    }
};

code dfs----------------------------------------------------------

class Graph {

    bool dfs(int node,int parent, int vis[], vector<int> adj[]) {
        vis[node]=1 ;
        for(auto it : adj[node]){
            if(!vis[it]){
                if(dfs(it,node,vis,adj)== true){
                    return true ;
                }
            }
            else if(it != parent) return true ;
        }
        return false;
    }   
public:
    bool detectCycle(int V, vector<int> adj[]) {
        // Write your code here.
        int vis[V+1];
        memset(vis,0,sizeof(vis));
        for(int i = 0;i<V;i++) {
            if(!vis[i]) {
                if(dfs(i, -1, vis, adj) == true) return true;
            }
        }
        return false;
    }
};

------------------------------------------------------------------------------------