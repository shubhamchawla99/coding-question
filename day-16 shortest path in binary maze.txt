day-16 shortest path in binary maze

QL - https://leetcode.com/problems/shortest-path-in-binary-matrix/

#include <bits/stdc++.h>
using namespace std ;


int shortestPathBinaryMatrix(vector<vector<int>> &matrix, pair<int, int> src, pair<int, int> dest)
{
    int n = matrix.size();
    int m = matrix[0].size();

    if(matrix[dest.first][dest.second]==0)
    return -1;

    vector<vector<int>> dist (n,vector<int>(m,1e8));
    queue <pair<int,pair<int,int>>> q;

    // queue<pair<int, pair<int, int>>> q;

    dist[src.first][src.second]=0;
    q.push({0,{src.first,src.second}});

    int dr[] = {-1, 0, 1, 0};
    int dc[] = {0, 1, 0, -1};

    while(!q.empty()){
        auto it = q.front();
        int dis = it.first ;
        int r = it.second.first ;
        int c = it.second.second ;
        q.pop();
        if (r == dest.first && c == dest.second)
            return dist[r][c]; 
        for(int i= 0 ;i < 4 ; i++){
            int nr = r + dr[i];
            int nc = c + dc[i];
            if(nr>=0 && nc>=0 && nr<n && nc<m && matrix[nr][nc]==1 && dis + 1 < dist[nr][nc]){
                    dist[nr][nc] = 1 + dis ;
                    q.push({dis+1,{nr,nc}});
            }
        }
    }

    return -1 ;
}