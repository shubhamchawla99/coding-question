day-13 single source shortest path

QL -  https://www.codingninjas.com/codestudio/problems/single-source-shortest-path_8416371?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf

#include<bits/stdc++.h>
using namespace std;

vector<int> shortestPath(int n, vector<vector<int>>&edges, int src) {
    // Write your code here.
    int E = edges.size();
    vector<int> adj[n];
    for(int i=0 ;i<E ; i++){
        int u = edges[i][0];
        int v = edges[i][1];
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    vector<int> ans(n, -1);
    
    int dist[n];
    for(int i=0 ;i<n ; i++){dist[i]=1e9;}
    queue<int> q;
    q.push(src);
    dist[src] = 0;
    while(!q.empty()){
        int node =  q.front();
        
        q.pop();
        for(auto it : adj[node]){
            if(dist[it]>dist[node]+1){
                dist[it]=dist[node]+1;
                q.push(it);
            }
        }
    }
    for(int i=0 ; i< n ; i++){
        
        if(dist[i] != 1e9){
            ans[i] = dist[i];
        }
        
    }
    return ans;
        

}