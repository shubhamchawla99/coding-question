BFS and DFS
------------------

BFS
QL-https://practice.geeksforgeeks.org/problems/bfs-traversal-of-graph/1

class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int vis[V+1] ;
         memset(vis , 0 , sizeof(vis));
         vis[0]=1;
         queue<int> q ;
         q.push(0);
         vector<int> bfs;
         while(!q.empty()){
            int node = q.front();
             q.pop(); 
             bfs.push_back(node);
             
             for(auto it : adj[node]){
                 if(!vis[it]){
                     vis[it]=1;
                     q.push(it);
                 }
             }
         }
         
        return bfs ;
    }
};

=====================================================================================

DFS
QL-https://practice.geeksforgeeks.org/problems/depth-first-traversal-for-a-graph/1

class Solution {
  public:
   void dfs(int node, vector<int> adj[] , int vis[] , vector<int> &ls){
        vis[node]= 1;
        ls.push_back(node);
        for(auto it : adj[node]){
            if(!vis[it]){
                dfs(it, adj , vis , ls);
            }
        }
    }
    
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int vis[V+1];
        memset(vis,0,sizeof(vis));
        int start = 0;
        vector<int> ls;
        dfs(start, adj , vis , ls);
        return ls;
    }
};