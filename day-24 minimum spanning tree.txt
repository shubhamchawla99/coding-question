day-24 minimum spanning tree

CQ- https://www.codingninjas.com/studio/problems/minimum-spanning-tree_631769?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf

#include <bits/stdc++.h>
using namespace std;
int minimumSpanningTree(vector<vector<int>>& edges, int n)
{
  /*
    Don't write main().
    Don't read input, it is passed as function argument.    
    No need to print anything.
    Taking input and printing output is handled automatically.
  */
  vector<pair<int,int>> adj[n+1];
  for(int i=0 ; i < edges.size() ; i++){
    int u = edges[i][0];
    int v = edges[i][1];
    int w = edges[i][2];
    adj[u].push_back({v,w});
    adj[v].push_back({u,w});
  }
  vector<int> vis(n , 0);
  priority_queue<pair<int,int> , vector<pair<int,int>> , greater<pair<int,int>>> pq ;
  pq.push({0,0});
  int sum =0 ;
  while(!pq.empty()){
    int node = pq.top().second ;
    int wt = pq.top().first;
    pq.pop();

    if(vis[node]==1) { continue  ; }

    vis[node]=1 ;
    sum += wt ;
    for( auto it : adj[node]){
      int adjnode = it.first ;
      int edw = it.second ;
      if (!vis[adjnode]) {
					pq.push({edw, adjnode});
			}
    }
  }
  return sum ;
}