day-14 sortest path in DAG having wt

QL - https://www.codingninjas.com/codestudio/problems/shortest-path-in-dag_8381897?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf

 #include<bits/stdc++.h>

using namespace std;

void toposort(int node ,vector<pair<int,int>> adj[] , stack<int> &st , int vis[] ){
        vis[node]=1;
        for(auto it : adj[node]){
            int v = it.first;
            if(!vis[v]){ 
                toposort(v,adj,st,vis); 
            }
        }
        st.push(node);
    }

vector<int> shortestPathInDAG(int n, int m, vector<vector<int>> &edges)
{   
    
    // Write your code here
    
    vector<pair<int,int>> adj[n];
    for(int i=0; i<m ;i++){
        int u = edges[i][0];
        int v = edges[i][1];
        int wt = edges[i][2];
        adj[u].push_back({v,wt});
    }
    stack<int> st;
    int vis[n]= {0} ;
    for(int i=0;i<n;i++){
        if(!vis[i]){
            toposort(i,adj,st,vis);  
        }        
    }
    // ---------------- part 1 ------------------
    
    vector<int> dis(n);
    for(int i = 0 ; i< n ;i++ ){
        dis[i]= 1e9 ;
    }
    dis[0] = 0 ;
    while(!st.empty()){
        int node = st.top();
        st.pop();
        for( auto it : adj[node]){
            int v = it.first;
            int wt = it.second;           
            if(dis[node]+wt < dis[v]){
                dis[v] = dis[node]+wt ;
            }
        }
    }
    for(int i=0 ; i< n ;i++){
        if(dis[i]== 1e9){
            dis[i] = -1 ;
        }
    }
    return dis ;
}
